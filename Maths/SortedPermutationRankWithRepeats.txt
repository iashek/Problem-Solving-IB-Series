#define mod 1000003

long long int power(long long int a,long long int b)
{
    if(a==0)
        return 0;
    if(b==0)
        return 1;
    
    long long int res=0;
    if(b%2==0){
        res=power(a,b/2);
        res=(res*res)%mod;
    }
    else{
        res=a%mod;
        res=(res*power(a,b-1)%mod)%mod;
    }
    return res%mod;
}

int Solution::findRank(string A) {
    
    int n=A.size();
    long long int fact[n];
    fact[0]=1;
    for(int i=1;i<n;i++)
        fact[i]=((fact[i-1]%mod)*(i%mod))%mod;
    int rank=0;
    for(int i=0;i<A.size();i++)
    {
        int count=0;
        for(int j=i+1;j<A.size();j++)
        {
            if(A[j]<A[i])
                count++;
        }
        
        map<char,int> m;
        for(int k=i;k<A.size();k++)
        {
            m[A[k]]++;
        }
        
        long long int d=1;
        for(auto a:m){
            d=((d%mod)*(fact[a.second]%mod))%mod;
        }
        rank = (rank + count*(fact[A.size()-i-1]%mod)*(power(d,mod-2)%mod))%mod;
    }
    return (rank+1)%mod;
}
